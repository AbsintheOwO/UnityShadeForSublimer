<snippet>
    <content><![CDATA[Shader "MyshaderSimple/$1" {
	 
    Properties{
        _Color("Color Tint",Color)=(1.0,1.0,1.0,1.0)
		_Diffuse("diffuse",Color)=(1.0,1.0,1.0,1.0)
    }
	SubShader {
		pass{
		Tags{"LightMode"="ForwardBase"}
		CGPROGRAM
		#pragma vertex vert
		#pragma fragment frag
		#include "Lighting.cginc"

		fixed4 _Color;
		fixed4 _Diffuse;

		struct a2v{
		float4 vertex : POSITION;
		float3 normal :NORMAL;
		float4 texcoord:TEXCOORD0;
		};
		struct v2f{
		float4 pos : SV_POSITION;
		fixed3 color :COLOR0;
		};
		v2f vert(a2v v) {
		   v2f o;
		   o.pos = UnityObjectToClipPos(v.vertex);
		   fixed3 ambient=UNITY_LIGHTMODEL_AMBIENT.xyz;
		   fixed3 worldNormal =normalize(mul(v.normal,(float3x3)unity_WorldToObject));
		   fixed3 worldLight=normalize(_WorldSpaceLightPos0.xyz);
		   fixed3 diffuse = _LightColor0.rgb * _Diffuse.rgb *saturate( dot(worldNormal,worldLight) );
		   o.color=ambient+diffuse;
		   return o;
		}
		fixed4 frag(v2f i) : Sv_Target{ 
		   fixed3 c=i.color;
		   c*=_Color.rgb;
		   return fixed4(c,0.1);
		}
		ENDCG
		}
	}
	FallBack "Diffuse"
}
    	 ]]></content>
    <tabTrigger>zTem-Dif</tabTrigger>
    <scope>source.shader</scope>
    <description>漫反射模板</description>
</snippet>
